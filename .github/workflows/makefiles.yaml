name: "Makefile CI"

on: [pull_request, push]

jobs:
  build:
    name: "Compile CodeHawk"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ocaml-compiler:
          - "4.12.1"
          - "4.13.1"
          - "4.14.1"
    steps:
    - uses: actions/checkout@v1
    - uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}
    - name: Install dependencies
      run: opam install extlib camlzip zarith ocamlbuild goblint-cil
    - name: Compile CodeHawk
      run: eval $(opam env) && cd CodeHawk && ./full_make_no_gui.sh
    - name: Prepare tar file for upload
      run: tar -cvf artifacts.tar CodeHawk/CHB/bchcmdline/chx86_analyze CodeHawk/CHC/cchcil/parseFile CodeHawk/CHC/cchcmdline/canalyzer
    - name: Upload artifacts tar file
      uses: actions/upload-artifact@v3
      with:
        name: artifacts-${{ matrix.ocaml-compiler }}
        path: artifacts.tar
  b_orchestration:
    name: "Run CodeHawk-Binary tests"
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ocaml-compiler:
          - "4.12.1"
          - "4.13.1"
          - "4.14.1"
    steps:
    - uses: actions/checkout@v2
      with:
        repository: static-analysis-engineering/CodeHawk-Binary
    - name: Delete submitted prebuilts
      run: rm -f chb/bin/binaries/linux/chx86_analyze
    - name: Download artifacts tar
      uses: actions/download-artifact@v3
      with:
        name: artifacts-${{ matrix.ocaml-compiler }}
    - name: Extract artifacts
      run: |
        tar xvf artifacts.tar
        mv CodeHawk/CHB/bchcmdline/chx86_analyze chb/bin/binaries/linux/chx86_analyze
    - name: Run binary analyzer tests
      run: PYTHONPATH=$PWD chb/cmdline/chkx test runall
  c_orchestration:
    name: "Run CodeHawk-C tests"
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ocaml-compiler:
          - "4.12.1"
          - "4.13.1"
          - "4.14.1"
    steps:
    - uses: actions/checkout@v2
      with:
        repository: static-analysis-engineering/CodeHawk-C
    - name: Delete submitted prebuilts
      run: |
        rm -f chc/bin/linux/parseFile
        rm -f chc/bin/linux/canalyzer
    - name: Download artifacts tar
      uses: actions/download-artifact@v3
      with:
        name: artifacts-${{ matrix.ocaml-compiler }}
    - name: Extract artifacts
      run: |
        tar xvf artifacts.tar
        mv CodeHawk/CHC/cchcil/parseFile chc/bin/linux/parseFile
        mv CodeHawk/CHC/cchcmdline/canalyzer chc/bin/linux/canalyzer
    - name: Run kendra test suite
      run: |
        PYTHONPATH=$PWD python3 chc/cmdline/kendra/chc_test_kendrasets.py | tee kendra_output.txt
        diff kendra_output.txt tests/kendra/example_output/test_kendrasets.txt
