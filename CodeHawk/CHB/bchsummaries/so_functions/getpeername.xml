<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <reference href="http://pubs.opengroup.org/onlinepubs/000095399/"/>
  <header date="2020-06-03 17:49:07"/>
  <libfun lib="so_functions" name="getpeername">
    <documentation>
      <desc>get the name of the peer socket</desc>
      <apidoc>
        <pt>
          <ll>int getpeername(</ll>
          <ld>int socket</ld>
          <ld>struct sockaddr *restrict address</ld>
          <ld>socklen_t *restrict address_len</ld>
          <ll>)</ll>
        </pt>
        <par name="socket">socket</par>
        <par name="address">
	  struct to receive the peer address of the specified socket
	</par>
        <par name="address_len">
	  length of the address
	</par>
        <return>
          <rc cond="success">0</rc>
          <rc cond="failure">-1</rc>
        </return>
      </apidoc>
    </documentation>
    <api adj="0" cc="cdecl" name="getpeername">
      <par loc="stack" name="socket" nr="1">
        <type>int</type>
      </par>
      <par loc="stack" name="address" nr="2">
        <type><ptr>ch_sockaddr</ptr></type>
      </par>
      <par loc="stack" name="address_len" nr="3">
        <type><ptr>socklen_t</ptr></type>
	<pre><deref-read/></pre>
	<sideeffects><block-write/></sideeffects>
      </par>
      <returntype>int</returntype>
    </api>
    <semantics>
      <io-actions/>
      <preconditions>
	<pre>
	  <math>
	    <apply>
	      <deref-write/>
	      <type>ch_sockaddr</type>
	      <ci>address</ci>
	      <ci>address_len</ci>
	    </apply>
	  </math>
	</pre>
      </preconditions>
      <postconditions>
	<zero-negone/>
      </postconditions>
      <sideeffects>
	<sideeffect>
	  <math>
	    <apply>
	      <block-write/>
	      <type>ch_sockaddr</type>
	      <ci>address</ci>
	      <ci>address_len</ci>
	    </apply>
	  </math>
	</sideeffect>
      </sideeffects>
    </semantics>
  </libfun>
</codehawk-binary-analyzer>
