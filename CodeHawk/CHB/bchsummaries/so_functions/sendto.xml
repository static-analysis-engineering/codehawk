<?xml version="1.0" encoding="UTF-8"?>
<codehawk-binary-analyzer>
  <reference href="http://pubs.opengroup.org/onlinepubs/000095399/"/>
  <header date="2020-05-19 10:38:31"/>
  <libfun lib="so_functions" name="sendto">
    <documentation>
      <desc>send a message on a socket</desc>
      <apidoc>
        <pt>
          <ll>ssize_t sendto(</ll>
          <ld>int socket</ld>
          <ld>const char *message</ld>
          <ld>size_t length</ld>
          <ld>int flags</ld>
          <ld>const struct sockaddr *dest_addr</ld>
          <ld>socklen_t dest_len</ld>
          <ll>)</ll>
        </pt>
        <par name="socket">Specifies the socket file descriptor</par>
        <par name="message">
	  Points to a buffer containing the message to be sent
	</par>
        <par name="length">
	  Specifies the size of the message in bytes
	</par>
        <par name="flags">Specifies the type of message transmission</par>
        <par name="dest_addr">
	  Points to a sockaddr structure containing the destination
	  address. The length and format of the address depend on the
	  address family of the socket
	</par>
        <par name="dest_len">
	  Specifies the length of the sockaddr structure pointed to by
	  the dest_addr argument
	</par>
        <return>
          <rc cond="success">the number of bytes sent</rc>
          <rc cond="failure">-1</rc>
        </return>
      </apidoc>
    </documentation>
    <api adj="0" cc="cdecl" name="sendto">
      <par loc="stack" name="socket" nr="1">
        <type>int</type>
      </par>
      <par loc="stack" name="message" nr="2">
        <type><ptr>byte</ptr></type>
      </par>
      <par loc="stack" name="length" nr="3">
        <type>size_t</type>
      </par>
      <par loc="stack" name="flags" nr="4">
        <type>int</type>
      </par>
      <par loc="stack" name="dest_addr" nr="5">
        <type><ptr>ch_sockaddr</ptr></type>
      </par>
      <par loc="stack" name="dest_len" nr="6">
        <type>socklen_t</type>
      </par>
      <returntype>ssize_t</returntype>
    </api>
    <semantics>
      <io-actions/>
      <preconditions>
	<pre>
	  <math>
	    <apply>
	      <deref-read/>
	      <type>byte</type>
	      <ci>message</ci>
	      <ci>length</ci>
	    </apply>
	  </math>
	</pre>
	<pre>
	  <math>
	    <apply>
	      <deref-read/>
	      <type>ch_sockaddr</type>
	      <ci>dest_addr</ci>
	      <ci>dest_len</ci>
	    </apply>
	  </math>
	</pre>
      </preconditions>
      <postconditions>
	<post>
	  <math>
	    <apply>
	      <geq/>
	      <return/>
	      <cn>0</cn>
	    </apply>
	  </math>
	</post>
	<error-post>
	  <math>
	    <apply>
	      <eq/>
	      <return/>
	      <cn>-1</cn>
	    </apply>
	  </math>
	</error-post>
      </postconditions>
      <sideeffects/>
    </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2020, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
</codehawk-binary-analyzer>
