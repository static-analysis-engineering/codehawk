<?xml version="1.0" encoding="UTF-8"?>
 <codehawk-binary-analyzer>
  <header date="08/05/2013 10:39:54"/>
  <reference href="http://pubs.opengroup.org/onlinepubs/000095399/"/>
  <libfun lib="msvcrt" name="memcpy">
   <documentation>
    <desc>copies count bytes from the object pointed to by src to the object pointed to by dest
      </desc>
    <apidoc>
     <pt>
      <ll>void *memcpy (</ll>
      <ld>void *dest,</ld>
      <ld>const void *src,</ld>
      <ld>size_t count</ld>
      <ll>)</ll>
     </pt>
     <par name="dest">pointer to the destination buffer</par>
     <par name="src">pointer to the source buffer</par>
     <par name="count">number of bytes to be copied</par>
     <return>the value of dest</return>
    </apidoc>
   </documentation>
   <api adj="0" cc="cdecl" name="memcpy">
     <returntype><ptr>void</ptr></returntype>
    <par loc="stack" io="w" name="dest" rep="hex" nr="1">
      <type><ptr>void</ptr></type>
     <roles>
        <role rt="ioc:memops" rn="dst-bytes:copy"/>
     </roles>
    </par>
    <par loc="stack" io="r" name="src" rep="hex" nr="2">
     <type><ptr>void</ptr></type>
     <roles>
        <role rt="ioc:memops" rn="src-bytes:copy"/>
     </roles>
    </par>
    <par loc="stack" io="r" name="count" roles="none" nr="3">
     <type>size_t</type>
    </par>
   </api>
   <semantics>
     <io-actions>
       <io-action cat="memops" desc="copies memory"/>
     </io-actions>
    <preconditions>
      <pre>
	<math>
	  <apply>
	    <deref-read/>
	    <type>byte</type>
	    <ci>src</ci>
	    <ci>count</ci>
	  </apply>
	</math>
      </pre>
      <pre>
	<math>
	  <apply>
	    <deref-write/>
	    <type>byte</type>
	    <ci>dest</ci>
	    <ci>count</ci>
	  </apply>
	</math>
      </pre>
      <pre>
	<math>
	  <apply>
	    <geq/>
	    <ci>count</ci>
	    <cn>0</cn>
	  </apply>
	</math>
      </pre>
    </preconditions>
    <postconditions>
     <post>
      <math>
       <apply>
        <eq/>
        <return-value/>
        <ci>dest</ci>
       </apply>
      </math>
     </post>
    </postconditions>
    <sideeffects>
     <sideeffect>
      <math>
       <apply>
        <block-write/>
        <type>byte</type>
        <ci>dest</ci>
        <ci>count</ci>
       </apply>
      </math>
     </sideeffect>
    </sideeffects>
   </semantics>
  </libfun>
  <copyright-notice>Copyright 2012-2016, Kestrel Technology LLC, Palo Alto, CA 94304</copyright-notice>
 </codehawk-binary-analyzer>
